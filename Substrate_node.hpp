//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : SAVI/VDCPlanner
//  @ File Name : Substrate_node.hpp
//  @ Date : 17/04/2013
//  @ Author : Maissa Jabri
//
//


#if !defined(_SUBSTRATE_NODE_H)
#define _SUBSTRATE_NODE_H

#include<iostream>
#include <list>
#include "Node.hpp"
#include "Virtual_node.hpp"
#include "Sub_node_type.h"
using namespace std;

class Substrate_node : public Node {
public:
	Substrate_node();
	Substrate_node(int,double,double,int,double,int,double);
	Substrate_node(int,double,double,int,double,int,string,double);
	Substrate_node(int,double,double,double,int,double,int,string,double);
	int GetActive();
	void SetAvailability(double);
	double GetAvailability();
	void SetName(string);
	string GetName();
	void SetActive(int);
	std::list<class Virtual_node>* GetEmbeddedNodes();
	std::list<int>* GetEmbeddedNodes_id();
    double GetUsedBandwidth();
	double GetRestBandwidth();
	double GetUsedMemory();
	double GetRestMemory();
	double GetUsedCpu();
	double GetRestCpu();
	double GetUsedDisk();
	double GetRestDisk();
	void DisplayEmdeddedNodes();
	void Display();
private:
	int active;
	int flavor;
	double availability;
	string name;
	std::list<class Virtual_node> embeddedNodes;
	std::list<int> embeddedNodes_id;
};

#endif  //_SUBSTRATE_NODE_H

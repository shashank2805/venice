//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : SAVI/VDCPlanner
//  @ File Name : Virtual_node.hpp
//  @ Date : 17/04/2013
//  @ Author : Maissa Jabri
//
//

#if !defined(_VIRTUAL_NODE_H)
#define _VIRTUAL_NODE_H

#include "Node.hpp"
#include "Substrate_node.hpp"
#include <string>
using namespace std;

class Virtual_node: public Node {
public:
	Virtual_node();
	Virtual_node(int, double, double, int, double);
	Virtual_node(int, double, double, int, double, int);
	Virtual_node(int, double, double,double, int, double, int);
	Virtual_node(int,string, double, double,double, int, double, int);
	void SetFlavor(int);
	int GetFlavor();
	class Substrate_node * GetEmbeddingNode();
	void RemoveEmbeddingNode();
	void SetEmbeddingNode(class Substrate_node *);
	string GetEmbeddingNode_name();
	void RemoveEmbeddingNode_name();
	void SetEmbeddingNode_name(string);
	string GetTaskState();
	void SetTaskState(string);
	void CalculateTaskState();
	string GetPowerState();
	void SetPowerState(string);
	void CalculatePowerState();
	string GetPublicIp();
	void SetPublicIp(string);
	void CalculatePublicIp();
	string GetPrivateIp();
	void SetPrivateIp(string);
	void CalculatePrivateIp();
	void CalculateStatus();
private:
	int flavor;
	string task_state;
	string power_state;
	string public_ip;
	string private_ip;
	string embeddingNode_name;
	Substrate_node * embeddingNode;
};

#endif  //_VIRTUAL_NODE_H

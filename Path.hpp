//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : SAVI/VDCPlanner
//  @ File Name : Path.hpp
//  @ Date : 17/04/2013
//  @ Author : Maissa Jabri
//
//


#if !defined(_PATH_H)
#define _PATH_H
#include<iostream>
#include<list>
#include "Link.hpp"
#include "Substrate_link.hpp"
#include "Substrate_node.hpp"
using namespace std;

class Path : public Link {
private:
	Virtual_node *from;
	Virtual_node *to;
	int from_id;
	int to_id;
	//std::list<class Substrate_node>* substrateNodes;
	std::list<class Substrate_link> substrateLinks;
	int length;// 0 => from==path, -1=> no path
public:
	Path(int id,Virtual_node * from,Virtual_node * to,double bw);
	Path(int id,int from_id,Virtual_node * from,int to_id,Virtual_node * to,double bw);
	Path(int id,string name, int from_id,Virtual_node * from,int to_id,Virtual_node * to,double bw);
	std::list<Substrate_link> * GetSubstrateLinks();
	int GetLength();
	void SetLength(int);
	Virtual_node * GetSourceNode();
	Virtual_node * GetDestinationNode();
	int GetSourceNode_id();
	int GetDestinationNode_id();
};

#endif  //_PATH_H
